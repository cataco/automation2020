version: '2'
services:
  #backend
  backend:
    ipc: host
    shm_size: 1024M
    image: "backend-${ENVIRONMENT}-${CURRENT_BRANCH}-${COMMIT_HASH}"
    container_name: "backend-${ENVIRONMENT}"
    environment:
      - "DJANGO_SETTINGS_MODULE=backend.settings"
      - "RABBIT_IP=${RABBIT_IP}"
      - "RABBIT_PORT=${RABBIT_PORT}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_IP=${POSTGRES_IP}"
      - "POSTGRES_PORT=${POSTGRES_PORT}"
      - "EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}"
      - "SENDGRID_API_KEY=${SENDGRID_API_KEY}"
      - "SELENIUM_PORT=${SELENIUM_PORT}"
      - "environment_id=${environment_id}"
    ports:
      - "${BACKEND_IP}:${BACKEND_HTTP_PORT}:80"
    env_file: .env
    depends_on:
      - database
      - rabbit
    volumes:
      - medias:/srv/www/backend/backend/medias
  # django celery ---------------------------------------------------------------------
  celery:
    ipc: host
    shm_size: 1024M
    image: "backend-${ENVIRONMENT}-${CURRENT_BRANCH}-${COMMIT_HASH}"
    container_name: "backend-${ENVIRONMENT}-celery"
    environment:
      - "DJANGO_SETTINGS_MODULE=backend.settings"
      - "RABBIT_IP=${RABBIT_IP}"
      - "RABBIT_PORT=${RABBIT_PORT}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_IP=${POSTGRES_IP}"
      - "POSTGRES_PORT=${POSTGRES_PORT}"
      - "EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}"
      - "SENDGRID_API_KEY=${SENDGRID_API_KEY}"
      - "SELENIUM_PORT=${SELENIUM_PORT}"
      - "environment_id=${environment_id}"

    ports:
      - "${CELERY_IP}:${CELERY_HTTP_PORT}:80"
    command: /srv/www/bin/celery.sh
    volumes:
      - medias:/srv/www/backend/backend/medias
    depends_on:
      - database
      - rabbit
  # rabbit ---------------------------------------------------------------------
  rabbit:
    image: rabbitmq:3
    container_name: "rabbit-${ENVIRONMENT}"
    ports:
      - "${RABBIT_IP}:${RABBIT_PORT}:5672"
    hostname: "rabbit-${ENVIRONMENT}"
    depends_on:
      - database

  # postgres db ---------------------------------------------------------------------
  database:
    image: postgres
    container_name: "postgres-${ENVIRONMENT}"
    hostname: "postgres-${ENVIRONMENT}"
    environment:
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_DB=${POSTGRES_DB}"
    ports:
      - "${POSTGRES_IP}:${POSTGRES_PORT}:5432"

    # flower ---------------------------------------------------------------------
  flower:
    ipc: host
    shm_size: 1024M
    image: "backend-${ENVIRONMENT}-${CURRENT_BRANCH}-${COMMIT_HASH}"
    container_name: "backend-${ENVIRONMENT}-flower"
    environment:
      - "DJANGO_SETTINGS_MODULE=backend.settings"
      - "RABBIT_IP=${RABBIT_IP}"
      - "RABBIT_PORT=${RABBIT_PORT}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_IP=${POSTGRES_IP}"
      - "POSTGRES_PORT=${POSTGRES_PORT}"
      - "EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}"
      - "SENDGRID_API_KEY=${SENDGRID_API_KEY}"
      - "SELENIUM_PORT=${SELENIUM_PORT}"
      - "environment_id=${environment_id}"

    ports:
      - "${FLOWER_IP}:${FLOWER_HTTP_PORT}:80"
    command: /srv/www/bin/flower.sh
    depends_on:
      - rabbit
    volumes:
      - medias:/srv/www/backend/backend/medias
  selenium_hub:
    image: selenium/hub:3.14.0-curium
    ports:
      - "${SELENIUM_IP}:${SELENIUM_PORT}:4444"

    # Using Appium Docker Android
  real_device:
    image: appium/appium
    depends_on:
      - selenium_hub
    network_mode: "service:selenium_hub"
    privileged: true
    volumes:
      - /dev/bus/usb:/dev/bus/usb
      - ~/.android:/root/.android
      - medias:/root/tmp
    environment:
      - CONNECT_TO_GRID=true
      - SELENIUM_HOST=selenium_hub
      # Enable it for msite testing
      #- BROWSER_NAME=chrome

    # Docker-Android for Android application testing
  nexus_7.1.1:
    image: budtmo/docker-android-x86-7.1.1
    privileged: true
    # Increase scale number if needed
    depends_on:
      - selenium_hub
      - real_device
    ports:
      - "${ANDROID_IP}:${ANDROID_PORT}:6080"
      -  "${ANDROID_IP}:${ANDROID_PORT_2}:5555"
    # Change path of apk that you want to test. I use sample_apk that I provide in folder "example"
    volumes:
      - medias:/root/tmp/medias
      - ./video-nexus_7.1.1:/tmp/video
    environment:
      - DEVICE=Nexus 5
      - CONNECT_TO_GRID=true
      - APPIUM=true
      - SELENIUM_HOST=selenium_hub
      - AUTO_RECORD=true

    # Docker-Android for mobile website testing with chrome browser
    # Chrome browser exists only for version 7.0 and 7.1.1
  samsung_galaxy_web_7.1.1:
    image: budtmo/docker-android-x86-11.0
    privileged: true
    # Increase scale number if needed
    depends_on:
      - selenium_hub
      - real_device
    ports:
      - "${ANDROID_IP}:${ANDROID_PORT_3}:6080"
      - "${ANDROID_IP}:${ANDROID_PORT_4}:5555"
    volumes:
      - ./video-samsung_7.1.1:/tmp/video
    environment:
      - DEVICE=Samsung Galaxy S6
      - CONNECT_TO_GRID=true
      - APPIUM=true
      - SELENIUM_HOST=selenium_hub
      - MOBILE_WEB_TEST=true
      - AUTO_RECORD=true

    # Docker-Android for mobile website testing with default browser
    # Default browser exists only for version 5.0.1, 5.1.1 and 6.0
  samsung_galaxy_web_5.1.1:
    image: budtmo/docker-android-x86-5.1.1
    privileged: true
    # Increase scale number if needed
    depends_on:
      - selenium_hub
      - real_device
    ports:
      - "${ANDROID_IP}:${ANDROID_PORT_5}:6080"
      - "${ANDROID_IP}:${ANDROID_PORT_6}:5555"
    volumes:
      - ./video-samsung_5.1.1:/tmp/video
    environment:
      - DEVICE=Samsung Galaxy S6
      - CONNECT_TO_GRID=true
      - APPIUM=true
      - SELENIUM_HOST=selenium_hub
      - MOBILE_WEB_TEST=true
      - AUTO_RECORD=true
volumes:
  medias: {}
